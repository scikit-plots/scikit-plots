name: Build Dependencies(Win-ARM64)
description: "Common setup steps for Win-ARM64 CI"
runs:
  using: "composite"
  steps:
    - name: "Set environment variables for ARM64 (CC/CXX/CFLAGS)"
      # if: matrix.buildplat[1] == 'win' && matrix.buildplat[2] == 'ARM64'
      # shell: pwsh
      run: |
        # echo "CC=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        # echo "CXX=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        # echo "FC=flang-new" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CC=clang-cl" >> $env:GITHUB_ENV
        echo "CXX=clang-cl" >> $env:GITHUB_ENV
        echo "CFLAGS=/MD /arch:arm64" >> $env:GITHUB_ENV
        echo "CXXFLAGS=/MD /arch:arm64" >> $env:GITHUB_ENV
        echo "FC=flang-new" >> $env:GITHUB_ENV
        echo "TARGET_ARCH=${{ matrix.buildplat[2] }}" >> $env:GITHUB_ENV
        # Write-Host "Exported CC/CXX/CFLAGS for ARM64."

    - name: Install LLVM (ARM64)  # LLVM (clang-cl, flang-new) -> Cross-toolchain & Fortran
      # shell: sh -l {0}
      # shell: bash -el {0}
      # shell: cmd /C CALL {0}
      # shell: powershell
      shell: pwsh
      run: | # zizmor: ignore[github-env] safe: adding LLVM\bin to PATH
        Invoke-WebRequest https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.8/LLVM-20.1.8-woa64.exe -UseBasicParsing -OutFile LLVM-woa64.exe
        $expectedHash = "7c4ac97eb2ae6b960ca5f9caf3ff6124c8d2a18cc07a7840a4d2ea15537bad8e"
        $fileHash = (Get-FileHash -Path "LLVM-woa64.exe" -Algorithm SHA256).Hash
        if ($fileHash -ne $expectedHash) {
            Write-Error "Checksum verification failed. The downloaded file may be corrupted or tampered with."
            exit 1
        }
        Start-Process -FilePath ".\LLVM-woa64.exe" -ArgumentList "/S" -Wait
        echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # Activate MSVC ARM64 Toolchain (vcvarsall)
    - name: Install pkgconf via vcpkg  # vcpkg + pkgconf -> Provides pkg-config tool for ARM64
      shell: pwsh
      run: | # zizmor: ignore[github-env] safe: adding pkgconf to PATH amd64_arm64
        # Call vcvarsall.bat for ARM64 and capture environment
        # & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" arm64
        $vcvarsOutput = cmd /C '"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" arm64 && set'
        $vcvarsOutput -split "`r?`n" | ForEach-Object {
            if ($_ -match "^(.*?)=(.*)$") {
                "$($matches[1].Trim())=$($matches[2].Trim())" | Out-File -FilePath $env:GITHUB_ENV -Append
                if ($matches[1] -eq "PATH") {
                    "$($matches[2].Trim())" | Out-File -FilePath $env:GITHUB_PATH -Append
                }
            }
        }
        # Write-Host "âœ… MSVC ARM64 environment exported to GITHUB_ENV and PATH."

    - name: Install pkgconf (ARM64) via vcpkg
      shell: pwsh
      run: |
        $env:VCPKG_ROOT = "C:\vcpkg"
        Set-Location $env:VCPKG_ROOT
        ./vcpkg install pkgconf:arm64-windows
        $pkgconfPath = "$env:VCPKG_ROOT\installed\arm64-windows\tools\pkgconf"
        Copy-Item "$pkgconfPath\pkgconf.exe" "$pkgconfPath\pkg-config.exe" -Force
        # echo "$pkgconfPath" >> $env:GITHUB_PATH
        echo "$pkgconfPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
