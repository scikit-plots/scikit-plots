# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CI üõ°Ô∏è Security Standards CodeQL"

## CodeQL If using "Default Setup", remove custom workflows. üöÄ
on:
  workflow_dispatch: # Allows manual triggering of the workflow
  pull_request:
    # branches: [ "main", "*.X" ]
    branches:
      - main
      ## Release branches
      - maintenance/**
  push:
    # branches: [ "main", "*.X" ]
    branches:
      - main
      ## Release branches
      - maintenance/**
  schedule:
    ## run every Wednesday at 6am UTC
    - cron: '0 6 * * 1'

## simultaneity
## This ensures that only one deployment to "production" can happen at a time.
## If a new commit is pushed before the current job finishes, the in-progress job is canceled.
concurrency:
  ## Ensures that only one instance of this workflow runs per branch or PR at a time.
  ## The 'group' key defines a unique concurrency group:
  ## - github.workflow: Name of the workflow file.
  ## - github.head_ref: (Only on pull_request) The name of the branch from which the PR was created (source branch). Example: "feature/add-login"
  ## - github.run_id: (Always) A unique numeric ID for each run of a workflow. Useful as a fallback for uniqueness. Example: 6432789156
  ## - github.ref: (Always) The full ref path of the branch or tag that triggered the workflow. Examples: For a push to a branch: "refs/heads/main" For a PR: "refs/pull/42/merge" For a tag: "refs/tags/v1.0.0"
  ## - github.ref_name: (Always) Just the final part of the ref path (branch or tag name, does not exist for PRs). Examples: For a push to a branch: "main" For a tag: "v1.0.0"
  ## This ensures: PRs use head_ref, Pushes/Tags use ref or ref_name, Fallback to run_id in edge cases
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  ## If you push multiple times quickly, older runs would continue even though newer ones have started.
  ## Canceling previous runs reduces resource usage and speeds up feedback.
  ## If a new run is triggered for the same group, cancel the in-progress one.
  cancel-in-progress: true

## Top-level permissions (outside jobs)
## Job-level permissions (inside a specific job)
## Restrict the permissions granted to the use of secrets.GITHUB_TOKEN in this
## github actions workflow:
## https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  ## only required for workflows in private repositories
  contents: read  # for actions/checkout to fetch code
  actions: read  # for github/codeql-action/init to get workflow details
  pull-requests: read
  packages: read  # required to fetch internal or private CodeQL packs
  security-events: write  # for github/codeql-action/autobuild to send a status report

## Global environment variables (available to all jobs and steps)
## Job-level environment variables (override global, scoped to this job)
## Step-level environment variables (override job + global, scoped to this step)

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})  # Multiples
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ 'ubuntu-latest' || (matrix.language == 'swift' && 'macos-latest') }}
    # timeout-minutes: 360

    # To enable this workflow on a fork, comment out:
    if: github.repository == 'scikit-plots/scikit-plots'

    strategy:
      fail-fast: false
      matrix:
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
        language: [ 'python', 'c-cpp', 'javascript-typescript', 'actions', ]
        # include:
        # - language: python
        #   build-mode: none
        # - language: c-cpp
        #   build-mode: autobuild
        # - language: actions
        #   build-mode: none
        # If the analyze step fails for one of the languages you are analyzing with
        # "We were unable to automatically build your code", modify the matrix above
        # to set the build mode to "manual" for that language. Then modify this step
        # to build your code.
        # ******** NOTE ********
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages

    steps:
      ## üì• Checkout the Git repository into the runner
      - name: "‚¨áÔ∏è Checkout (cloned) repository with full history"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false  # Prevents accidental credential exposure
          # submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
          lfs: true
          ## Gets the correct commit message for pull request
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      # Initializes the CodeQL tools for scanning.
      - name: CodeQL Initialize
        uses: github/codeql-action/init@fca7ace96b7d713c7035871441bd52efbe39e27e # v3.28.19
        # continue-on-error: true
        with:
          languages: ${{ matrix.language }}
          # build-mode: ${{ matrix.build-mode }}
          # source-root: src
          # setup-python-dependencies: false
          config-file: ./.github/codeql-config.yml
          # ******** NOTE ********
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main
          # For more details on CodeQL's query packs, refer to:
          # https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: CodeQL Autobuild
        if: matrix.language != 'c-cpp'
        uses: github/codeql-action/autobuild@fca7ace96b7d713c7035871441bd52efbe39e27e # v3.28.19
        # continue-on-error: true

      # ******** NOTE ********
      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìò See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
      # üìö https://git.io/JvXDl
      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language, please refer to the EXAMPLE below for guidance.
      # - run: |
      #     echo "Run, Build Application using script"
      #     ./location_of_script_within_repo/buildscript.sh
      # - if: matrix.build-mode == 'manual'
      #   shell: bash
      #   run: |
      #     echo 'If you are using a "manual" build mode for one or more of the' \
      #       'languages you are analyzing, replace this with the commands to build' \
      #       'your code, for example:'
      #     echo '  make bootstrap'
      #     echo '  make release'
      #     exit 1

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        if: matrix.language == 'c-cpp'
        with:
          python-version: '3.11'

      - name: Build Library
        if: matrix.language == 'c-cpp'
        run: |
          # install your project if it's a package
          pip install -r requirements/all.txt
          pip install --no-build-isolation --no-cache-dir -e .[dev,build,test,docs] -v

      - name: "üß† CodeQL Perform Analysis"
        uses: github/codeql-action/analyze@fca7ace96b7d713c7035871441bd52efbe39e27e # v3.28.19
        # continue-on-error: true
        with:
          category: "/language:${{matrix.language}}"
